// üëâ –ó–∞–≤–¥–∞–Ω–Ω—è 1:
// –ù–∞–ø–∏—Å–∞—Ç–∏ —Ä–æ–∑–≤‚Äô—è–∑–æ–∫ –Ω–∏–∂—á–µ –æ–ø–∏—Å–∞–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è (–ø–æ –æ–¥–Ω–æ–º—É —Ä—è–¥–∫—É –∫–æ–¥—É –Ω–∞ –∫–æ–∂–Ω–∏–π –ø—É–Ω–∫—Ç)
// ‚Äî –°—Ç–≤–æ—Ä—ñ—Ç—å –∑–º—ñ–Ω–Ω—É city –∑ —Ç–∏–ø–æ–º –¥–∞–Ω–∏—Ö string.
// ‚Äî –ü—Ä–∏—Å–≤–æ–π—Ç–µ —ó–π –∑–Ω–∞—á–µ–Ω–Ω—è ¬´–ö–∏—ó–≤¬ª.
// ‚Äî –ó–º—ñ–Ω—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó city –Ω–∞ ¬´–õ—å–≤—ñ–≤¬ª.
// ‚Äî –°—Ç–≤–æ—Ä—ñ—Ç—å –∑–º—ñ–Ω–Ω—É address –∑ —Ç–∏–ø–æ–º –¥–∞–Ω–∏—Ö string —ñ —Å–∫–æ–ø—ñ—é–π—Ç–µ –≤ –Ω–µ—ó –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó city.
// ‚Äî –í–∏–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó address –∑ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ console.log().
let city:string;
city ='–ö–∏—ó–≤';
city = 'Lviv';
var address:string = city;
console.log('Task 1 ==>', address);

// üëâ –ó–∞–≤–¥–∞–Ω–Ω—è 2:
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é if..else —á–µ—Ä–µ–∑ —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–π –≤–∏—Ä–∞–∑, –Ω–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥, 
// —è–∫–∏–π –æ—Ç—Ä–∏–º—É—î —á–∏—Å–ª–æ —á–µ—Ä–µ–∑ prompt, –∞ –ø–æ—Ç—ñ–º –≤–∏–≤–æ–¥–∏—Ç—å –≤ console.log() –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:
// ‚Äî –ß–∏—Å–ª–æ –ø–∞—Ä–Ω–µ.
// ‚Äî –ß–∏—Å–ª–æ –Ω–µ–ø–∞—Ä–Ω–µ.
// ‚Äî –ß–∏—Å–ª–æ 0.
// let getNum: number = +prompt('Enter number');
// const res = (getNum === 0) ? '–ß–∏—Å–ª–æ 0.' : (getNum%2 !== 0) ? '–ß–∏—Å–ª–æ –Ω–µ–ø–∞—Ä–Ω–µ'
//  : '–ß–∏—Å–ª–æ –ø–∞—Ä–Ω–µ';
// console.log('Task 2 ==>',res);

// üëâ –ó–∞–≤–¥–∞–Ω–Ω—è 3:
// –ù–∞–ø–∏—Å–∞—Ç–∏ —Ä–æ–∑–≤‚Äô—è–∑–æ–∫ –Ω–∏–∂—á–µ –æ–ø–∏—Å–∞–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é function declaration:
// ‚Äî –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –ø–µ—Ä–µ–¥–∞–Ω–∏–π —ó–π —á–∏—Å–ª–æ–≤–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä.
// ‚Äî –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ —É —Ñ—É–Ω–∫—Ü—ñ—ó –º–æ–∂–µ –±—É—Ç–∏ –≤—ñ–¥ 2—Ö —ñ –±—ñ–ª—å—à–µ.
// –ü—Ä–∏–∫–ª–∞–¥ —Ä–æ–±–æ—Ç–∏:
// ‚Äî max(5,-2) ‚Äì –º–∞—î –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ 5.
// ‚Äî max(5,-2, 30, 6) ‚Äì –º–∞—î –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ 30
// function max(...arg:Array<number>){
// let res:number = Math.max(...arg)
// console.log('Task 3 ==>',res);
// }
// max(5,-2);
// max(5,-2, 30, 6);
// max(5,-2, 30, 6,-200,26,-10000,500);

// üëâ –ó–∞–≤–¥–∞–Ω–Ω—è 4:
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é getSqrt(number), —è–∫–∞ –≤–∏—Ä–∞—Ö–æ–≤—É—î –∫–æ—Ä—ñ–Ω—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–∏–π.
// –î–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–æ—Ä–µ–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ Math. –í –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–æ–≥–æ
// —â–æ –ø–µ—Ä–µ–¥–∞–ª–∏ –≤ —Ñ—É–Ω–∫—Ü—ñ—é –º–∞—î –≤–∏–≤–æ–¥–∏—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:
// ‚Äî –Ø–∫—â–æ –ø–µ—Ä–µ–¥–∞–Ω–µ —á–∏—Å–ª–æ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ - –ö–≤–∞–¥—Ä–∞—Ç–Ω–∏–π –∫–æ—Ä—ñ–Ω—å –∑ —Å—Ç—ñ–ª—å–∫–∏ —Ç–æ
// –¥–æ—Ä—ñ–≤–Ω—é—î —Å—Ç—ñ–ª—å–∫–∏ —Ç–æ.
// ‚Äî –Ø–∫—â–æ –ø–µ—Ä–µ–¥–∞–ª–∏ –Ω–µ —á–∏—Å–ª–æ - –ü–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è.
// ‚Äî –Ø–∫—â–æ —á–∏—Å–ª–æ –º–µ–Ω—à–µ 0 - –í–≤–µ–¥—ñ—Ç—å –¥–æ–¥–∞—Ç–Ω—î —á–∏—Å–ª–æ.
// ‚Äî –Ø–∫—â–æ –≤ —Ñ—É–Ω–∫—Ü—ñ—é –Ω—ñ—á–æ–≥–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–ª–∏ - –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ!
// let getNum : number | string = prompt('Enter number');
// function getSqrt(getNum): void{
//     if(getNum >= 0 && getNum !=='' && getNum !== null  ){
//         let sq:number = Math.sqrt(getNum)
//        console.log(`–ö–≤–∞–¥—Ä–∞—Ç–Ω–∏–π –∫–æ—Ä—ñ–Ω—å –∑ ${getNum} –¥–æ—Ä—ñ–≤–Ω—é—î ${sq}.`)
//        }
//     else if(getNum < 0){
//         console.log('–í–≤–µ–¥—ñ—Ç—å –¥–æ–¥–∞—Ç–Ω—î —á–∏—Å–ª–æ')   
//        }
//     else if(typeof getNum == 'string' && getNum !== '' ){
//            console.log('–ü–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è')   
//           }
//     else if(getNum === ''){
//            console.log('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ!')
//        }
// }
// getSqrt(getNum)

// üëâ –ó–∞–≤–¥–∞–Ω–Ω—è 5:
// –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —è–∫ –Ω–∞ –≤—ñ–¥–µ–æ Cenzor, –∞ —Å–∞–º–µ:
// ‚Äî –ü—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ ADD –¥–æ–±–∞–≤–ª—è—Ç–∏ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–µ —Å–ª–æ–≤–æ, —è–∫–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏–º–µ—Ç—å—Å—è
//  –≤ —Å–ø–∏—Å–∫—É ‚ÄúBad words‚Äù
// ‚Äî –Ø–∫—â–æ –ø–æ–ª–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–Ω—è —Å–ª–æ–≤–∞ –Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
// ‚Äî –ü—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ Cenzor –ø–µ—Ä–µ–≤—ñ—Ä—è—î—Ç—å—Å—è —á–∏ —î –≤ textarea –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–µ —Å–ª–æ–≤–æ,
//  —è–∫—â–æ —Ç–∞–∫ –π–æ–≥–æ –∑–∞–º—ñ–Ω—è—î –Ω–∞ *, –ø—Ä–∏—á–æ–º—É –Ω–∞ —Ç—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —è–∫–∞ –¥–æ–≤–∂–∏–Ω–∞ —Å–ª–æ–≤–∞
// ‚Äî –Ø–∫—â–æ textarea –ø–æ—Ä–æ–∂–Ω—è –≤–∏–≤–æ–¥–∏—Ç–∏ –ø–æ–≤—ã–¥–æ–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ–ª—è
const add:HTMLElement = document.getElementById('add');
const reset:HTMLElement  = document.querySelector('#reset');
const cenzor:HTMLElement = document.getElementById('cenzor');
const textarea:HTMLCollectionOf<HTMLTextAreaElement> = document.getElementsByTagName('textarea');
let bad_words:HTMLElement = document.querySelector('.bad_words');
let word = document.querySelector('#word') as HTMLInputElement;
let all_bad_words:Array<string> = [];
//create bad words, button add
add.onclick = function(){
    if(word.value == ''){
    alert('Please write a bad word!')
    }
    else{
        all_bad_words.push(word.value)
        bad_words.innerHTML= `Bad words: ${all_bad_words}`;
        word.value='';
    }  
}
 //button "Reset"
 reset.onclick = function(){
    all_bad_words=[];
    bad_words.innerHTML= `Bad words: `;
}
//check textarea
cenzor.onclick = function(){
if(textarea[0].value == ''){
        alert('Please write text for cenzor!')
        }
else {       
let check_words = textarea[0].value.split(' ')
textarea[0].value = '';
for(let i = 0; i<check_words.length; i++){
    if(all_bad_words.some(n => n === check_words[i])){
        let str:string = check_words[i].slice(check_words[i].length);
        check_words[i] = str.padStart(check_words[i].length,'*');
    }
}
let checked = check_words.join(' ');
textarea[0].value += checked;
}
event.preventDefault()
};

